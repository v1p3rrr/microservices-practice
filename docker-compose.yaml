version: '3.9'
services:
  alpha:
    build: 
      context: ./ServiceAlpha
    ports:
      - "8081:8081"
    environment:
      JAEGER_AGENT_HOST: host.docker.internal
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8081/actuator/health"]
      interval: 10s
      timeout: 30s
      retries: 3
      start_period: 10s
    depends_on:
      - jaeger
    networks:
      - abnet      

  beta:
    build: 
      context: ./ServiceBeta
    ports:
      - "8082:8082"
    environment:
      JAEGER_AGENT_HOST: jaeger
    healthcheck:
      test: ["CMD", "curl", "-f", "http://beta:8082/actuator/health"]
      interval: 10s
      timeout: 30s
      retries: 3
      start_period: 10s
    depends_on:
      - jaeger
    networks:
      - abnet      
  
  krakend:
    image: devopsfaith/krakend:2.1.3
    volumes:
      - ./config/krakend:/etc/krakend
    ports:
      - "8080:8080"
    depends_on:
      - alpha
      - beta
      - jaeger
    networks:
      - abnet
    healthcheck:
      test: ["CMD", "curl", "-f", "http://host.docker.internal:8082/v1/healthcheck"]
      interval: 10s
      timeout: 30s
      retries: 3
      start_period: 10s     
  
  prometheus:
    image: prom/prometheus
    ports:
      - 9090:9090
    volumes:
      - ./config/prometheus/prometheus.yaml:/etc/prometheus/prometheus.yml
    depends_on:
      - alpha
      - beta
    networks:
      - abnet      
  
  grafana:
    image: grafana/grafana
    ports:
      - 3000:3000
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
    depends_on:
      - prometheus
    volumes:
      - ./config/grafana/provisioning/datasources:/etc/grafana/provisioning/datasources/
      - ./config/grafana/provisioning/dashboards:/etc/grafana/provisioning/dashboards/
    networks:
      - abnet      

  jaeger:
    image: jaegertracing/all-in-one:1
    ports:
      - "5775:5775/udp"
      - "6831:6831/udp"
      - "6832:6832/udp"
      - "5778:5778"
      - "16686:16686"
      - "14268:14268"
      - "9411:9411"
    networks:
      - abnet

  zabbix:
    image: zabbix/zabbix-appliance:latest
    ports:
      - "80:80"
      - "10051:10051"
    networks:
      - abnet
    depends_on:
      - alpha
      - beta

  elasticsearch:
    image: elasticsearch:8.5.3
    environment:
        - bootstrap.memory_lock=true
        - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
        - "discovery.type=single-node"
        - xpack.security.enabled=false
    ports:
        - "9200:9200"
    volumes:
        - elasticsearch_data:/usr/share/elasticsearch/data
    networks:
        - abnet
    depends_on:
      - alpha

  kibana:
    image: kibana:8.3.3
    ports:
        - "5601:5601"
    environment:
        ELASTICSEARCH_URL: http://elasticsearch:9200
        ELASTICSEARCH_HOSTS: '["http://elasticsearch:9200"]'
    depends_on:
        - elasticsearch
    networks:
        - abnet

  logstash:
    image: logstash:8.3.3
    volumes:
      - ./config/logstash/config:/usr/share/logstash/config/
      - ./config/logstash/pipeline:/usr/share/logstash/pipeline/
    ports:
      - "5044:5044"
      - "5000:5000/tcp"
      - "5000:5000/udp"
      - "9600:9600"
    environment:
      LS_JAVA_OPTS: "-Xmx256m -Xms256m"
    networks:
      - abnet
    depends_on:
      - elasticsearch


  postgres:
    image: postgres:13.2
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${POSTGRESQL_DB}
      POSTGRES_USER: ${POSTGRESQL_USER}
      POSTGRES_PASSWORD: ${POSTGRESQL_PASS}
    networks:
      - abnet

  keycloak:
    depends_on:
      - postgres
    container_name: local_keycloak
    environment:
      DB_VENDOR: postgres
      DB_ADDR: postgres
      DB_DATABASE: ${POSTGRESQL_DB}
      DB_USER: ${POSTGRESQL_USER}
      DB_PASSWORD: ${POSTGRESQL_PASS}
      KEYCLOAK_ADMIN: ${KEYCLOAK_ADMIN}
      KEYCLOAK_ADMIN_PASSWORD: ${KEYCLOAK_ADMIN_PASSWORD}
    image: jboss/keycloak:${KEYCLOAK_VERSION}
    ports:
      - "8443:8080"
    restart: unless-stopped
    networks:
      - abnet

volumes:
  grafana-data:
  elasticsearch_data:
    driver: local

networks:
  abnet:
    driver: bridge